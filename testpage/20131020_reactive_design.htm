<html>
<head>
<title>Adventures in CSS and reactive design</title>
<meta name="keywords" content="css, reative design, mobile" />
<meta name="description" content="Tim explores reactive design in css with much trial and error" />
<meta name="author" content="Tim Heath" />
</head>
<body>
<h2 class="date">10/20/2013</h2>
<a href="http://taoexmachina.com/index.php?a=20131020_reactive_design.txt"><h1>Adventures in CSS and reactive design</h1></a>
<hr>
<a href="images/IMG_6427_e.jpg"><img class="right-image" src="images/IMG_6427_e_320.jpg" width="320px" height="240px"/></a>
<p>CSS is supposed to make coding web pages easier and more flexible. <br/>But sometimes it behaves in unexpected ways.</p>
<p> When starting this page, I wanted to practice more contemporary web design. More HTML5 and CSS3 with less tables and dancing gifs. I Looked at some examples, and settled on a site that follows 960-width design on a large screen, but still adapts to mobile devices and everything between.</p>
<p>Many design sites stated that all I would need is a <code>float:left;</code> and a handful of <code>div</code> containers. But things seemed to slide around the page without rhyme or reason. A floated image would leave the bounds of it's own div. Text slides up under it. Then the browser just sits there and laughs at you when you want to center something horizontally AND vertically.</p>
<p>However, perseverance is rewarding. I read more documents. Looked at more examples. Tried 50 different things. Asked a few friends, and finally find a solution. This hinged on giving the #logo and #title <code>display:inline-block;</code> and the containing div geting <code>overflow:auto;</code>. Now both elements in my title-bar behave partly as an inline element and partly as a block element. They will sit next to each other vertically, but also drop a line if there isn't room for the element. And as long as the wrapper around those elements doesn't have a defined height or width, setting <code>overflow:auto;</code> seems to let it adjust to the height and margins of the containing elements.</p>
<p>Trying to center the title didn't help either. Here I did make a couple concession. Fist, setting BOTH the #logo and the #title to <code>vertical-align:middle;</code> seems an easy enough way to vertically center both elements together. The image is basically setting the bar for the text. But I could never get the title to exactly center itself horizontally while the logo sat there on the left. SO what you see is really just a trick of margins. setting the left side to a relative value. (14% looked good enough to me.)</p>
<p>Lastly, actually adjusting the horizontal center of the logo and the title when on something like a mobile device is really just a trick of the code. Defining some alternate CSS based on the browser width. CSS has a built in function for this that I used: <code>@media screen and (max-width: 600px)</code> The CSS tags defined after this only apply if the browser is LESS than 600px. (This value works well on my DROID 4, but might need to be adjusted for iPhone4S and newer) The only CSS attributes defined differently in this block are: <code>display:block;</code> and <code>margin-left:auto; margin-right:auto;</code> for both my logo and title elements.</p>
<p>Et voil√†, My page adjusts just how I felt it should Thanks for the tips: Barbra, David, Jesse, and Charlotte.</p>
</body>
</html>
